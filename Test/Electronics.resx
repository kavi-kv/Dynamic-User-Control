<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GhzXDPJN6LCBHy9FixcXLK0aktP/2Q==
</value>
  </data>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="guna2Elipse2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>141, 17</value>
  </metadata>
</root>